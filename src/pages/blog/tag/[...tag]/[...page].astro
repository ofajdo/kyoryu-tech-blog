---
import { getCollection } from "astro:content";
import ArticleListLayout from "./../../../../layouts/ArticleListLayout.astro";

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const posts = await getCollection("blog");
  const tags = posts
    .map((post: any) => {
      return post.data.tags;
    })
    .flat()
    .filter(
      (element, index, self) =>
        self.findIndex((e) => e.slug === element.slug) === index,
    );

  return tags.flatMap((tag: any) => {
    const filtered_posts = posts.filter((post: any) => {
      return post.data.tags
        .map(({ slug }: { slug: string }) => slug)
        .includes(tag.slug);
    });
    return paginate(filtered_posts, {
      params: {
        tag: tag.slug,
      },
      props: {
        tag: tag,
      },
      pageSize: 10,
    });
  });
}

interface Page<T = any> {
  data: T[];
  start: number;
  end: number;
  total: number;
  currentPage: number;
  size: number;
  lastPage: number;
  url: {
    current: string;
    prev: string | undefined;
    next: string | undefined;
    first: string | undefined;
    last: string | undefined;
  };
}
const { page, tag }: { page?: Page; tag?: { name: string; slug: string } } =
  Astro.props;
const posts = page?.data;

console.log(page);
---

<ArticleListLayout
  posts={posts}
  title={tag?.name}
  page={page}
  icon={"mdi:hashtag"}
  panels={[
    {
      name: "contents",
      icon: "mdi:table-of-contents",
      state: "is-panel-active",
      label: "目次のパネル",
      type: "contents",
    },
    {
      name: "pages",
      icon: "gridicons:pages",
      state: "",
      label: "いろいろな記事のパネル",
      type: "posts",
    },
    {
      name: "setting",
      icon: "mdi:settings-outline",
      state: "",
      label: "サイトの設定",
      type: "setting",
    },
  ]}
/>
