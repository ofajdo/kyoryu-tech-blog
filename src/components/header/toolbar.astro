---
import { Icon } from "astro-icon/components";
const { panels } = Astro.props;
---

<div class="l-toolbar">
  <ul class="flex column">
    {
      panels.map(
        ({
          name,
          icon,
          state,
          label,
        }: {
          name: string;
          icon: string;
          state: string;
          label: string;
        }) => {
          return (
            <li>
              <button
                class={"panel-button " + state}
                aria-label={label}
                data-name={name}
              >
                <Icon name={icon} />
              </button>
            </li>
          );
        },
      )
    }
  </ul>
</div>

<style>
  li {
    display: block;
  }
  .l-toolbar {
    height: 100%;
    width: 64px;
    background-color: var(--color-gray-100);
    overflow-y: scroll;
  }
  button {
    display: block;
    height: auto;
    width: 100%;
    color: var(--color-gray-500);
    padding: var(--spacing-4);
  }
  .is-panel-active {
    color: var(--color-text);
    background-color: var(--color-gray-150);
  }

  button:hover {
    background-color: var(--color-gray-150);
  }

  .is-panel-active:hover {
    background-color: var(--color-gray-200);
  }

  @media (max-width: 499px) {
    .l-toolbar {
      width: 48px;
    }
    button {
      padding: var(--spacing-3);
    }
  }
</style>
<script>
  const load = () => {
    const buttons = document.querySelectorAll("button.panel-button");

    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        const active_button = document.querySelector("button.is-panel-active");

        const active_button_name = (active_button as HTMLElement | null)
          ?.dataset?.name;
        const button_name = (button as HTMLElement).dataset?.name;

        if (active_button_name === button_name && active_button_name) {
          document
            .getElementById(active_button_name)
            ?.classList.toggle("is-panel-active");

          button.classList.toggle("is-panel-active");
        }

        button.classList.toggle("is-panel-active");
        active_button?.classList.toggle("is-panel-active");

        if (active_button_name) {
          document
            .getElementById(active_button_name)
            ?.classList.toggle("is-panel-active");
        }
        if (button_name) {
          document
            .getElementById(button_name)
            ?.classList.toggle("is-panel-active");
        }
      });
    });

    if (window.matchMedia && window.matchMedia("(max-width: 768px)").matches) {
      const active_button = document.querySelector("button.is-panel-active");

      const active_button_name = (active_button as HTMLElement | null)?.dataset
        ?.name;

      active_button?.classList.toggle("is-panel-active");

      if (active_button_name) {
        document
          .getElementById(active_button_name)
          ?.classList.toggle("is-panel-active");
      }
    }
  };

  document.addEventListener("astro:after-swap", load);
  document.addEventListener("DOMContentLoaded", load);
</script>
